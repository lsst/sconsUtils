# -*- python -*-

import lsst.sconsUtils
from lsst.sconsUtils import ExternalConfiguration
from lsst.sconsUtils.utils import use_conda_compilers, get_conda_prefix
import os
import site

dependencies = {
    "required": ["python"],
}

class NanobindConfiguration(ExternalConfiguration):

    def configure(self, conf, packages, check=False, build=True):
        configured = ExternalConfiguration.configure(self, conf, packages, check, build)
        if use_conda_compilers():
            # Support header namespaces in conda-forge site packages
            includePath = os.path.join(site.getsitepackages()[0], "nanobind/include")
            conf.env.AppendUnique(XCPPPATH=includePath)
            conf.env.AppendUnique(CXXFLAGS='-DNB_COMPACT_ASSERTIONS')
            conf.env.AppendUnique(CXXFLAGS='-DNB_SHARED')
        return configured

config = NanobindConfiguration(
    __file__,
    headers=["nanobind/nanobind.h"],
    libs=['nanobind']
)
